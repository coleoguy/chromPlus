results1[i] <- anova(fitz1, fitz2)[2,5]
results2[i] <- anova(fitzc1, fitzc2)[2,5]
print(i)
i <- 2
fitz1 <- find.mle(z1[[i]], x.init=c(.8,.8,.8,.8,.1,.1,.5,2,1))
fitz2 <- find.mle(z2[[i]], x.init=c(.8,.8,.1,.1,.5,2,1))
fitzc1 <- find.mle(zc1[[i]], x.init=c(.8,.8,.8,.8,.5,2,1))
fitzc2 <- find.mle(zc2[[i]], x.init=c(.8,.8,.5,2,1))
anova(fitz1, fitz2)[2,5]
anova(fitzc1, fitzc2)[2,5]
results1[i] <- anova(fitz1, fitz2)[2,5]
results2[i] <- anova(fitzc1, fitzc2)[2,5]
for(i in 3:100){
fitz1 <- find.mle(z1[[i]], x.init=c(.8,.8,.8,.8,.1,.1,.5,2,1))
fitz2 <- find.mle(z2[[i]], x.init=c(.8,.8,.1,.1,.5,2,1))
fitzc1 <- find.mle(zc1[[i]], x.init=c(.8,.8,.8,.8,.5,2,1))
fitzc2 <- find.mle(zc2[[i]], x.init=c(.8,.8,.5,2,1))
results1[i] <- anova(fitz1, fitz2)[2,5]
results2[i] <- anova(fitzc1, fitzc2)[2,5]
print(i)
}
for(i in 7:100){
fitz1 <- find.mle(z1[[i]], x.init=c(.8,.8,.8,.8,.1,.1,.5,2,1))
fitz2 <- find.mle(z2[[i]], x.init=c(.8,.8,.1,.1,.5,2,1))
fitzc1 <- find.mle(zc1[[i]], x.init=c(.8,.8,.8,.8,.5,2,1))
fitzc2 <- find.mle(zc2[[i]], x.init=c(.8,.8,.5,2,1))
results1[i] <- anova(fitz1, fitz2)[2,5]
results2[i] <- anova(fitzc1, fitzc2)[2,5]
print(i)
}
hist(results1)
hist(results1)
hist(results2)
for(i in 31:100){
fitz1 <- find.mle(z1[[i]], x.init=c(.8,.8,.8,.8,.1,.1,.5,2,1))
fitz2 <- find.mle(z2[[i]], x.init=c(.8,.8,.1,.1,.5,2,1))
fitzc1 <- find.mle(zc1[[i]], x.init=c(.8,.8,.8,.8,.5,2,1))
fitzc2 <- find.mle(zc2[[i]], x.init=c(.8,.8,.5,2,1))
results1[i] <- anova(fitz1, fitz2)[2,5]
results2[i] <- anova(fitzc1, fitzc2)[2,5]
print(i)
}
for(i in 41:100){
fitz1 <- find.mle(z1[[i]], x.init=c(.8,.8,.8,.8,.1,.1,.5,2,1))
fitz2 <- find.mle(z2[[i]], x.init=c(.8,.8,.1,.1,.5,2,1))
fitzc1 <- find.mle(zc1[[i]], x.init=c(.8,.8,.8,.8,.5,2,1))
fitzc2 <- find.mle(zc2[[i]], x.init=c(.8,.8,.5,2,1))
results1[i] <- anova(fitz1, fitz2)[2,5]
results2[i] <- anova(fitzc1, fitzc2)[2,5]
print(i)
}
hist(results2)
hist(results1)
results1
warnings()
anova(fitz1, fitz2)[2,5]
anova(fitzc1, fitzc2)[2,5]
fitzc1
fitzc1$lnLik
fitzc2$lnLik
sum(results1<.05)
sum(results1<.05, rm.na=T)
results1
results1<.05
help(sum)
sum(results1<.05, na.rm =T)
fp <- c(10,8,15,7)
barplot(fp)
barplot(fp/100)
barplot(fp/100,names=c(40,100,200,500))
barplot(fp/100,names=c(50,100,200,500))
barplot(fp/100,names=c(50,100,200,500),xlab="tree size")
barplot(fp/100,names=c(50,100,200,500),xlab="tree size", col="red")
fp <- c(10,8, 17,7)
barplot(fp/100,names=c(50,100,200,500),xlab="tree size", col="red")
plot(density(results1))
plot(density(results1[is.na(!results1)]))
plot(density(results1[!is.na(results1)]))
hist(results1)
hist(results2)
x <- list()
for(i in 1:100){
print(i)
x[[i]] <-simChrom(tree = phy.200[[i]],
pars = c(.4,.4,.8,.8, # gain and loss rates
0, 0, .1, .1, # demi and poly
.5,.5, # q12 q21
20), # root
limits = c(2,60),
model = "chromRate")
hist(x[[i]][[2]])
ShowTree(phy.200[[i]], x[[i]][[1]])
}
x <- list()
for(i in 1:100){
print(i)
x[[i]] <-simChrom(tree = phy.200[[i]],
pars = c(.4,.4,.8,.8, # gain and loss rates
0, 0, 0, 0, # demi and poly
.5,.5, # q12 q21
20), # root
limits = c(2,60),
model = "chromRate")
hist(x[[i]][[2]])
ShowTree(phy.200[[i]], x[[i]][[1]])
}
y <- list()
for(i in 1:74){
bar <- data.frame(names(x[[i]][[1]]),
x[[i]][[2]],
x[[i]][[1]])
rbar <- c(range(bar[,2])[[1]] - 3,
range(bar[,2])[[2]] + 3)
y[[i]] <- datatoMatrix(bar, rbar, hyper=T)
}
i<-1
fnc <- make.musse(phy.200[[i]], states = y[[i]], k = ncol(y[[i]]), strict = F)
z1[[i]] <-constrainMuSSE(data=y[[i]], fnc, hidden=T, polyploidy=F,
constrain=list(drop.poly=T, drop.demi=T, meta="SYM"))
z2[[i]] <-constrainMuSSE(data=y[[i]], fnc, hidden=T, polyploidy=F,
constrain=list(drop.poly=T, drop.demi=T,
nometa=T, meta="SYM"))
print(argnames(z1[[i]]))
print(argnames(z2[[i]]))
z1 <- z2 <- list()
for(i in 1:74){
print(i)
fnc <- make.musse(phy.200[[i]], states = y[[i]], k = ncol(y[[i]]), strict = F)
z1[[i]] <-constrainMuSSE(data=y[[i]], fnc, hidden=T, polyploidy=F,
constrain=list(drop.poly=T, drop.demi=T, meta="SYM"))
z2[[i]] <-constrainMuSSE(data=y[[i]], fnc, hidden=T, polyploidy=F,
constrain=list(drop.poly=T, drop.demi=T,
nometa=T, meta="SYM"))
print(argnames(z1[[i]]))
print(argnames(z2[[i]]))
}
results3 <- vector()
i<-1
fitz1 <- find.mle(z1[[i]], x.init=c(.8,.8,.8,.8,.1,.1,.5,2,1))
fitz1 <- find.mle(z1[[i]], x.init=c(.8,.8,.8,.8,.5,2,1))
fitz2 <- find.mle(z2[[i]], x.init=c(.8,.8,.5,2,1))
anova(fitz1, fitz2)
results3 <- vector()
for(i in 1:74){
fitz1 <- find.mle(z1[[i]], x.init=c(.8,.8,.8,.8,.5,2,1))
fitz2 <- find.mle(z2[[i]], x.init=c(.8,.8,.5,2,1))
results3[i] <- anova(fitz1, fitz2)[2,5]
print(i)
}
results3
x <- list()
for(i in 1:25){
print(i)
x[[i]] <-simChrom(tree = phy.200[[i]],
pars = c(.2,.2,.8,.8, # gain and loss rates
0, 0, 0, 0, # demi and poly
.5,.5, # q12 q21
20), # root
limits = c(2,60),
model = "chromRate")
hist(x[[i]][[2]])
ShowTree(phy.200[[i]], x[[i]][[1]])
}
warnings()
results3
y <- list()
for(i in 1:25){
bar <- data.frame(names(x[[i]][[1]]),
x[[i]][[2]],
x[[i]][[1]])
rbar <- c(range(bar[,2])[[1]] - 3,
range(bar[,2])[[2]] + 3)
y[[i]] <- datatoMatrix(bar, rbar, hyper=T)
}
z1 <- z2 <- list()
for(i in 1:25){
print(i)
fnc <- make.musse(phy.200[[i]], states = y[[i]], k = ncol(y[[i]]), strict = F)
z1[[i]] <-constrainMuSSE(data=y[[i]], fnc, hidden=T, polyploidy=F,
constrain=list(drop.poly=T, drop.demi=T, meta="SYM"))
z2[[i]] <-constrainMuSSE(data=y[[i]], fnc, hidden=T, polyploidy=F,
constrain=list(drop.poly=T, drop.demi=T,
nometa=T, meta="SYM"))
print(argnames(z1[[i]]))
print(argnames(z2[[i]]))
}
# 6 is weird
results3 <- vector()
for(i in 1:25){
fitz1 <- find.mle(z1[[i]], x.init=c(.8,.8,.8,.8,.5,2,1))
fitz2 <- find.mle(z2[[i]], x.init=c(.8,.8,.5,2,1))
results3[i] <- anova(fitz1, fitz2)[2,5]
print(i)
}
y <- list()
for(i in 1:25){
bar <- data.frame(names(x[[i]][[1]]),
x[[i]][[2]],
x[[i]][[1]])
rbar <- c(range(bar[,2])[[1]] - 3,
range(bar[,2])[[2]] + 3)
y[[i]] <- datatoMatrix(bar, rbar, hyper=T)
}
z1 <- z2 <- list()
x <- list()
for(i in 1:25){
print(i)
x[[i]] <-simChrom(tree = phy.200[[i]],
pars = c(.2,.2,.8,.8, # gain and loss rates
0, 0, 0, 0, # demi and poly
.5,.5, # q12 q21
20), # root
limits = c(2,60),
model = "chromRate")
hist(x[[i]][[2]])
ShowTree(phy.200[[i]], x[[i]][[1]])
}
warnings()
y <- list()
for(i in 1:25){
bar <- data.frame(names(x[[i]][[1]]),
x[[i]][[2]],
x[[i]][[1]])
rbar <- c(range(bar[,2])[[1]] - 3,
range(bar[,2])[[2]] + 3)
y[[i]] <- datatoMatrix(bar, rbar, hyper=T)
}
hist(x[[i]][[2]])
ShowTree(phy.200[[i]], x[[i]][[1]])
x <- list()
for(i in 1:25){
print(i)
x[[i]] <-simChrom(tree = phy.200[[i]],
pars = c(.4,.4,1.2,1.2, # gain and loss rates
0, 0, 0, 0, # demi and poly
.5,.5, # q12 q21
20), # root
limits = c(2,60),
model = "chromRate")
hist(x[[i]][[2]])
ShowTree(phy.200[[i]], x[[i]][[1]])
}
y <- list()
for(i in 1:25){
bar <- data.frame(names(x[[i]][[1]]),
x[[i]][[2]],
x[[i]][[1]])
rbar <- c(range(bar[,2])[[1]] - 3,
range(bar[,2])[[2]] + 3)
y[[i]] <- datatoMatrix(bar, rbar, hyper=T)
}
for(i in 23:25){
bar <- data.frame(names(x[[i]][[1]]),
x[[i]][[2]],
x[[i]][[1]])
rbar <- c(range(bar[,2])[[1]] - 3,
range(bar[,2])[[2]] + 3)
y[[i]] <- datatoMatrix(bar, rbar, hyper=T)
}
z1 <- z2 <- list()
for(i in 1:25){
print(i)
fnc <- make.musse(phy.200[[i]], states = y[[i]], k = ncol(y[[i]]), strict = F)
z1[[i]] <-constrainMuSSE(data=y[[i]], fnc, hidden=T, polyploidy=F,
constrain=list(drop.poly=T, drop.demi=T, meta="SYM"))
z2[[i]] <-constrainMuSSE(data=y[[i]], fnc, hidden=T, polyploidy=F,
constrain=list(drop.poly=T, drop.demi=T,
nometa=T, meta="SYM"))
print(argnames(z1[[i]]))
print(argnames(z2[[i]]))
}
for(i in 2:25){
print(i)
fnc <- make.musse(phy.200[[i]], states = y[[i]], k = ncol(y[[i]]), strict = F)
z1[[i]] <-constrainMuSSE(data=y[[i]], fnc, hidden=T, polyploidy=F,
constrain=list(drop.poly=T, drop.demi=T, meta="SYM"))
z2[[i]] <-constrainMuSSE(data=y[[i]], fnc, hidden=T, polyploidy=F,
constrain=list(drop.poly=T, drop.demi=T,
nometa=T, meta="SYM"))
print(argnames(z1[[i]]))
print(argnames(z2[[i]]))
}
i <- 5
for(i in 5:25){
print(i)
fnc <- make.musse(phy.200[[i]], states = y[[i]], k = ncol(y[[i]]), strict = F)
z1[[i]] <-constrainMuSSE(data=y[[i]], fnc, hidden=T, polyploidy=F,
constrain=list(drop.poly=T, drop.demi=T, meta="SYM"))
z2[[i]] <-constrainMuSSE(data=y[[i]], fnc, hidden=T, polyploidy=F,
constrain=list(drop.poly=T, drop.demi=T,
nometa=T, meta="SYM"))
print(argnames(z1[[i]]))
print(argnames(z2[[i]]))
}
for(i in 6:25){
print(i)
fnc <- make.musse(phy.200[[i]], states = y[[i]], k = ncol(y[[i]]), strict = F)
z1[[i]] <-constrainMuSSE(data=y[[i]], fnc, hidden=T, polyploidy=F,
constrain=list(drop.poly=T, drop.demi=T, meta="SYM"))
z2[[i]] <-constrainMuSSE(data=y[[i]], fnc, hidden=T, polyploidy=F,
constrain=list(drop.poly=T, drop.demi=T,
nometa=T, meta="SYM"))
print(argnames(z1[[i]]))
print(argnames(z2[[i]]))
}
for(i in 7:25){
print(i)
fnc <- make.musse(phy.200[[i]], states = y[[i]], k = ncol(y[[i]]), strict = F)
z1[[i]] <-constrainMuSSE(data=y[[i]], fnc, hidden=T, polyploidy=F,
constrain=list(drop.poly=T, drop.demi=T, meta="SYM"))
z2[[i]] <-constrainMuSSE(data=y[[i]], fnc, hidden=T, polyploidy=F,
constrain=list(drop.poly=T, drop.demi=T,
nometa=T, meta="SYM"))
print(argnames(z1[[i]]))
print(argnames(z2[[i]]))
}
x <- list()
for(i in 1:25){
print(i)
x[[i]] <-simChrom(tree = phy.200[[i]],
pars = c(.4,.4,.8,.8, # gain and loss rates
0, 0, 0, 0, # demi and poly
.5,.5, # q12 q21
20), # root
limits = c(2,60),
model = "chromRate")
hist(x[[i]][[2]])
ShowTree(phy.200[[i]], x[[i]][[1]])
}
print(i)
x[[i]] <-simChrom(tree = phy.200[[i]],
pars = c(.4,.4,.8,.8, # gain and loss rates
0, 0, 0, 0, # demi and poly
0,.5, # q12 q21
20), # root
limits = c(2,60),
model = "chromRate")
hist(x[[i]][[2]])
ShowTree(phy.200[[i]], x[[i]][[1]])
print(i)
x[[i]] <-simChrom(tree = phy.200[[i]],
pars = c(.4,.4,.8,.8, # gain and loss rates
0, 0, 0, 0, # demi and poly
0.5,0, # q12 q21
20), # root
limits = c(2,60),
model = "chromRate")
hist(x[[i]][[2]])
ShowTree(phy.200[[i]], x[[i]][[1]])
x[[i]] <-simChrom(tree = phy.200[[i]],
pars = c(.4,.4,.8,.8, # gain and loss rates
0, 0, 0, 0, # demi and poly
0.5,0, # q12 q21
20), # root
limits = c(2,60),
model = "chromRate")
x[[i]] <-simChrom(tree = phy.200[[i]],
pars = c(.4,.4,.8,.8, # gain and loss rates
0, 0, 0, 0, # demi and poly
0.5,0, # q12 q21
20), # root
limits = c(2,60),
model = "chromRate")
x[[i]] <-simChrom(tree = phy.200[[i]],
pars = c(.4,.4,.8,.8, # gain and loss rates
0, 0, 0, 0, # demi and poly
0.5,0, # q12 q21
20), # root
limits = c(2,60),
model = "chromRate")
hist(x[[i]][[2]])
ShowTree(phy.200[[i]], x[[i]][[1]])
x[[i]] <-simChrom(tree = phy.200[[i]],
pars = c(.4,.4,.8,.8, # gain and loss rates
0, 0, 0, 0, # demi and poly
0.5,0, # q12 q21
20), # root
limits = c(2,60),
model = "chromRate")
hist(x[[i]][[2]])
ShowTree(phy.200[[i]], x[[i]][[1]])
x[[i]] <-simChrom(tree = phy.200[[i]],
pars = c(.4,.4,.8,.8, # gain and loss rates
0, 0, 0, 0, # demi and poly
0.5,0, # q12 q21
20), # root
limits = c(2,60),
model = "chromRate")
hist(x[[i]][[2]])
ShowTree(phy.200[[i]], x[[i]][[1]])
x[[i]] <-simChrom(tree = phy.200[[i]],
pars = c(.4,.4,.8,.8, # gain and loss rates
0, 0, 0, 0, # demi and poly
0.5,0, # q12 q21
20), # root
limits = c(2,60),
model = "chromRate")
hist(x[[i]][[2]])
ShowTree(phy.200[[i]], x[[i]][[1]])
x[[i]] <-simChrom(tree = phy.200[[i]],
pars = c(.4,.4,.8,.8, # gain and loss rates
0, 0, 0, 0, # demi and poly
0.5,0, # q12 q21
20), # root
limits = c(2,60),
model = "chromRate")
hist(x[[i]][[2]])
ShowTree(phy.200[[i]], x[[i]][[1]])
x <- list()
for(i in 1:25){
print(i)
x[[i]] <-simChrom(tree = phy.200[[i]],
pars = c(.2,.2,.8,.8, # gain and loss rates
0, 0, 0, 0, # demi and poly
0.5,0, # q12 q21
20), # root
limits = c(2,60),
model = "chromRate")
hist(x[[i]][[2]])
ShowTree(phy.200[[i]], x[[i]][[1]])
}
warnings()
y <- list()
for(i in 23:25){
bar <- data.frame(names(x[[i]][[1]]),
x[[i]][[2]],
x[[i]][[1]])
rbar <- c(range(bar[,2])[[1]] - 3,
range(bar[,2])[[2]] + 3)
y[[i]] <- datatoMatrix(bar, rbar, hyper=T)
}
x[[i]]
x <- list()
for(i in 1:25){
print(i)
x[[i]] <-simChrom(tree = phy.200[[i]],
pars = c(.1,.1,.4,.4, # gain and loss rates
0, 0, 0, 0, # demi and poly
0.5,0, # q12 q21
20), # root
limits = c(2,60),
model = "chromRate")
hist(x[[i]][[2]])
ShowTree(phy.200[[i]], x[[i]][[1]])
}
y <- list()
for(i in 1:25){
bar <- data.frame(names(x[[i]][[1]]),
x[[i]][[2]],
x[[i]][[1]])
rbar <- c(range(bar[,2])[[1]] - 3,
range(bar[,2])[[2]] + 3)
y[[i]] <- datatoMatrix(bar, rbar, hyper=T)
}
x[[i]]
x <- list()
for(i in 1:25){
print(i)
x[[i]] <-simChrom(tree = phy.200[[i]],
pars = c(.1,.1,.4,.4, # gain and loss rates
0, 0, 0, 0, # demi and poly
0.5,0, # q12 q21
30), # root
limits = c(2,60),
model = "chromRate")
hist(x[[i]][[2]])
ShowTree(phy.200[[i]], x[[i]][[1]])
}
pw <- c(8, 15, 34, 67, 86)
barplot(pw/100, names=c(1,1.5,2,4,6))
pw <- c(8, 15, 34, 67, 86)
barplot(pw/100, names=c(1,1.5,2,4,6,10))
pw <- c(8, 15, 34, 67, 86,100)
barplot(pw/100, names=c(1,1.5,2,4,6,10))
pw <- c(8, 15, 34, 67, 76,84)
barplot(pw/100, names=c(1,1.5,2,4,6,10))
barplot(pw/100, names=c(1,1.5,2,4,6,10),
xlab="tree size", col="red")
barplot(pw/100, names=c(1,1.5,2,4,6,10),
xlab="ratio", col="red")
fp <- c(10,8, 17,7)
barplot(fp/100,names=c(50,100,200,500),
xlab="tree size", col="red")
results
hist(results)
hist(results1)
hist(results)
hist(runif(100))
x1 <- results
x<- runif(100)
foo1<-hist(x1)
foo1<-hist(x1)
foo<-hist(x)
barplot(foo$counts,foo1$counts)
barplot(cbind(foo$counts,foo1$counts))
barplot(rbind(foo$counts,foo1$counts))
barplot(rbind(foo$counts,foo1$counts), col=c("red","blue"))
barplot(rbind(foo$counts,foo1$counts),
col=c("red","blue"),
names=c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9))
points(x=1,y=1,pch=16,col="red")
points(x=1.5,y=55,pch=16,col="red")
barplot(rbind(foo$counts,foo1$counts),
col=c("red","blue"),
names=c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9))
points(x=1.5,y=55,pch=15,col="blue")
points(x=1.5,y=50,pch=15,col="red")
barplot(rbind(foo$counts,foo1$counts),
col=c("red","blue"),
names=c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9))
points(x=1.5,y=60,pch=15,col="blue")
points(x=1.5,y=50,pch=15,col="red")
